<svg width="400" height="400" viewbox = "0 0 400 400"  xmlns="http://www.w3.org/2000/svg">

<!--
<topfunctions>






function YofX(){
//foobar foobar
    X = plotparams.g*(x - plotparams.x0) - funcparams.X0;

    Y = BesselJ(4,X);

    y = plotparams.y0 - plotparams.G*(Y - funcparams.Y0);
}



function plotfunction(){
    
    /*plot one function:*/
    currentStroke = "blue";
    currentLineWidth = 4;
    ctx.strokeStyle = currentStroke;
    ctx.lineWidth = currentLineWidth;
    ctx.beginPath();	
    x = 0;
    intx = x;
    YofX();
    currentSVG += "	<path d = \"M";
    currentSVG += Math.round(x).toString() + " ";
    currentSVG += Math.round(y).toString() + " ";
    for(x = 1;x < plotparams.plotwidth;x++){
        ctx.moveTo(x-1,y);
        YofX();
        ctx.lineTo(x,y);
        currentSVG += "L" + x + " " + y + " ";
    }
    ctx.stroke();
    currentSVG += "\""+ " stroke = \"" + currentStroke + "\" stroke-width = \"" + currentLineWidth.toString() + "\" fill = \"" + "none" + "\" "+"/>";
    /*finish plot one function*/
    
}

// http://www.mhtl.uwaterloo.ca/old/courses/me3532/js/bessel.html


function BesselJ(n,x){
	if (n == null || n.length == 0) return "n not specified";
	if (Math.floor(n) != n) return "Error: n not integer";
	if (n < 2) return "Error: n < 2";
	var ACC = 40.0;		// Make larger to increase accuracy.
	var BIGNO = 1.0e10;
	var BIGNI = 1.0e-10;
	var j,jsum,m,ax,bj,bjm,bjp,sum,tox,ans;
	ax=Math.abs(x);
	if (ax == 0.0) return 0.0;
	else if (ax > n) {
		tox = 2.0/ax;
		bjm=BesselJ0(ax);
		bj=BesselJ1(ax);
		for (j=1;j<n;j++) {
			bjp=j*tox*bj-bjm;
			bjm=bj;
			bj=bjp;
		}
		ans=bj;
	} else {
		tox=2.0/ax;
		if (Math.sqrt(ACC*n) >= 0)
			m=2*((n + Math.floor(Math.sqrt(ACC*n))) / 2);
		else
			m=2*((n + Math.ceil(Math.sqrt(ACC*n))) / 2);
		jsum=0;
		bjp=ans=sum=0.0;
		bj=1.0;
		for (j=m;j>0;j--) {
			bjm=j*tox*bj-bjp;
			bjp=bj;
			bj=bjm;
			if (Math.abs(bj) > BIGNO) {
				bj *= BIGNI;
				bjp *= BIGNI;
				ans *= BIGNI;
				sum *= BIGNI;
			}
			if (jsum) sum += bj;
			jsum=!jsum;
			if (j == n) ans=bjp;
		}
		sum=2.0*sum-bj;
		ans /= sum;
	}
	return x < 0.0 && (n & 1) ? -ans : ans;
}


function BesselJ0(x) {
	var ax,z,xx,y,ans,ans1,ans2;
	ax = Math.abs(x)
	if (ax < 8.0) {
		y = x * x;
		ans1 = 57568490574.0 + y * (-13362590354.0 + y * (651619640.7 + y * (-11214424.18 + y * (77392.33017 + y * (-184.9052456)))));
		ans2 = 57568490411.0 + y * (1029532985.0 + y * (9494680.718 + y * (59272.64853 + y * (267.8532712 + y * 1.0))));
		ans = ans1 / ans2;
	} else {
		z = 8.0 / ax;
		y = z * z;
		xx = ax - 0.785398164;
		ans1 = 1.0 + y * (-0.1098628627e-2 + y * (0.2734510407e-4 + y * (-0.2073370639e-5 + y * 0.2093887211e-6)));
		ans2 = -0.1562499995e-1 + y * (0.1430488765e-3 + y * (-0.6911147651e-5 + y * (0.7621095161e-6 - y * 0.934935152e-7)));
		ans = Math.sqrt(0.636619772 / ax) * (Math.cos(xx) * ans1 - z * Math.sin(xx) * ans2);
	}
	return ans;
}

function BesselJ1(x) {
	var ax,z,xx,y,ans,ans1,ans2;
	ax = Math.abs(x);
	if (ax < 8.0) {
		y=x*x;
		ans1 = x*(72362614232.0+y*(-7895059235.0+y*(242396853.1+y*(-2972611.439+y*(15704.48260+y*(-30.16036606))))));
		ans2 = 144725228442.0+y*(2300535178.0+y*(18583304.74+y*(99447.43394+y*(376.9991397+y*1.0))));
		ans = ans1/ans2;
	} else {
		z=8.0/ax;
		y=z*z;
		xx=ax-2.356194491;
		ans1=1.0+y*(0.183105e-2+y*(-0.3516396496e-4+y*(0.2457520174e-5+y*(-0.240337019e-6))));
		ans2=0.04687499995+y*(-0.2002690873e-3+y*(0.8449199096e-5+y*(-0.88228987e-6+y*0.105787412e-6)));
		ans=Math.sqrt(0.636619772/ax)*(Math.cos(xx)*ans1-z*Math.sin(xx)*ans2);
		if (x < 0.0) ans = -ans;
	}
	return ans;	
}
























</topfunctions>
-->

<!--
<imgurl>

</imgurl>
-->

<!--
<currentjson>
{
    "constants": {},
    "imgurl": "",
    "plotparams": {
        "G": 334.9298034955614,
        "g": 0.047362440744766865,
        "duration": 450.78888054094654,
        "plotwidth": 400,
        "plotheight": 400,
        "x0": 0,
        "y0": 200.00000000000003
    },
    "funcparams": {
        "phi": 0.2688139066614501,
        "T": 1.4465183912692552,
        "X0": 0,
        "Y0": 0.001
    }
}
</currentjson>
-->

<!--
<equation>





<h2>Sin</h2>
<p style="color:blue">

</p><p class="bigeq">
$$
square wave
$$
</p>
<p></p>

$$
X = g(x - x_0) - X_0
$$
$$
Y = f(X)
$$
    
$$
y = y_0 - G(Y - Y_0)
$$


<p>
    X and Y, and $X_0$ and $Y_0$ in physical units of the System. x and y and x0 and y0 in pixels.  G is in pixels per Y unit and g is in X units per pixel. 
</p>






</equation>
-->
	<path d = "M0 200 L1 200.33492541505564 L2 200.33485961207964 L3 200.33457465869765 L4 200.33380825165875 L5 200.33219440350862 L6 200.32926467580032 L7 200.3244497591103 L8 200.31708139572225 L9 200.30639463994183 L10 200.29153045011944 L11 200.2715386055844 L12 200.24538094083806 L13 200.21193488851497 L14 200.1699973218043 L15 200.11828868622757 L16 200.05545740989905 L17 199.9800845806493 L18 199.89068887767712 L19 199.7857317447066 L20 199.66362279097217 L21 199.52272540573074 L22 199.36136257141288 L23 199.17782285997254 L24 198.97036659648055 L25 198.7372321735308 L26 198.47664249959223 L27 198.18681156404355 L28 197.86595110127524 L29 197.51227733593183 L30 197.12401779110053 L31 196.69941814103004 L32 196.23674908978398 L33 195.73431325710266 L34 195.19045205265797 L35 194.6035525198472 L36 193.9720541302751 L37 193.29445551012685 L38 192.56932107973066 L39 191.79528758775388 L40 190.97107052166518 L41 190.09547037633084 L42 189.1673787628931 L43 188.18578434040273 L44 187.14977855304568 L45 186.05856115621555 L46 184.91144551513494 L47 183.70786366022438 L48 182.44737108394958 L49 181.12965126445232 L50 179.75451990187787 L51 178.3219288539605 L52 176.83196975810753 L53 175.28487732793738 L54 173.68103231297215 L55 172.02096411096068 L56 170.30535302311114 L57 168.53503214334265 L58 166.71098887351826 L59 164.83436605749927 L60 162.90646272775663 L61 160.9287344591913 L62 158.90279332574607 L63 156.8304074563377 L64 154.71350018759495 L65 152.55414881185567 L66 150.35458291985142 L67 148.11718233848606 L68 145.84447466510042 L69 143.53913240059558 L70 141.20396968477206 L71 138.84193863821758 L72 136.45612531604968 L73 134.04974527978123 L74 131.6261387945306 L75 129.18876565973613 L76 126.74119968246032 L77 124.28712280327396 L78 121.83031888559967 L79 119.37466718025796 L80 116.92413547780124 L81 114.48277296203733 L82 112.05470277893161 L83 109.6441143358357 L84 107.25525534671708 L85 104.89242463211781 L86 102.55995982188773 L87 100.26223445129752 L88 98.003645426529 L89 95.78860497256217 L90 93.62153151991696 L91 91.5068404644888 L92 89.44893482063875 L93 87.45219578806861 L94 85.52097325334917 L95 83.65957624723809 L96 81.87226337916721 L97 80.16323327045716 L98 78.53661500796075 L99 76.99645863991753 L100 75.5467257358479 L101 74.19128003229518 L102 72.93387818617366 L103 71.77816065735973 L104 70.72764274201103 L105 69.78570577788417 L106 68.95558854266224 L107 68.24037886600289 L108 67.64300547564918 L109 67.16623009755702 L110 66.8126398295299 L111 66.58463980736175 L112 66.4844461819535 L113 66.51407942526714 L114 66.67535798237495 L115 66.96989228617218 L116 67.3990791506302 L117 67.9640965577068 L118 68.66589885224843 L119 69.50521235840412 L120 70.48253143021199 L121 71.59811494812908 L122 72.85198327237167 L123 74.2439156629752 L124 75.7734481755188 L125 77.4398720404662 L126 79.24223253305642 L127 81.17932833963229 L128 83.24971142526279 L129 85.45168740641819 L130 87.78331643139441 L131 90.24241457008308 L132 92.82655571358103 L133 95.53307398302897 L134 98.359066645952 L135 101.30139753727278 L136 104.35670098105432 L137 107.52138620791072 L138 110.79164226195088 L139 114.16344339000256 L140 117.63255490480422 L141 121.19453951277653 L142 124.84476409593923 L143 128.57840693651326 L144 132.39046537173886 L145 136.27576386543905 L146 140.22896248193047 L147 144.24456574692505 L148 148.31693187918006 L149 152.4402823757771 L150 156.60871193309083 L151 160.8161986847042 L152 165.0566147367661 L153 169.32373698058814 L154 173.6112581615801 L155 177.91279818302544 L156 182.22191562258362 L157 186.53211943890207 L158 190.83688084520944 L159 195.12964532635152 L160 199.4038447753241 L161 203.65290972505883 L162 207.8702816509006 L163 212.04942531904504 L164 216.1838411560032 L165 220.26707761405567 L166 224.2927435076435 L167 228.25452029559406 L168 232.14617428420266 L169 235.961569936811 L170 239.69467554863238 L171 243.33958545589232 L172 246.89052435612456 L173 250.34186057302128 L174 253.68811722694772 L175 256.92398315042396 L176 260.044323525218 L177 263.0441902181918 L178 265.9188317935929 L179 268.6637031800756 L180 271.27447497138724 L181 273.7470423403443 L182 276.0775335464601 L183 278.26231801836946 L184 280.2980139930177 L185 282.1814956944479 L186 283.9099000359214 L187 285.4806328300501 L188 286.89137449259266 L189 288.1400852265773 L190 289.2250096744525 L191 290.14468102703825 L192 290.897924579143 L193 291.4838607228348 L194 291.90190737049477 L195 292.1517818009455 L196 292.23350192312245 L197 292.1473869529542 L198 291.89405750032097 L199 291.47443506417625 L200 290.88974093514156 L201 290.141494506109 L202 289.23151099261673 L203 288.16189856599095 L204 286.93505490347206 L205 285.55366316076277 L206 284.02068737364596 L207 282.33936729651833 L208 280.51321268687315 L209 278.5459970459326 L210 276.4417508267819 L211 274.20475412248453 L212 271.8395288477651 L213 269.3508304289229 L214 266.7436390176914 L215 264.02315024577666 L216 261.1947655377955 L217 258.2640820012838 L218 255.23688191336126 L219 252.1191218245109 L220 248.91692130076626 L221 245.6365513263899 L222 242.28442238987066 L223 238.8670722767658 L224 235.39115359356728 L225 231.86342104736926 L226 228.29071850666634 L227 224.67996586910934 L228 221.03814576249002 L229 217.37229010561802 L230 213.68946655608494 L231 209.99676487219503 L232 206.30128321655982 L233 202.61011442902088 L234 198.93033229667276 L235 195.26897784880828 L236 191.63304570459593 L237 188.02947050123785 L238 184.46511343022684 L239 180.94674890913961 L240 177.48105141616222 L241 174.07458251424626 L242 170.73377809143616 L243 167.46493584350196 L244 164.27420302454087 L245 161.1675644906927 L246 158.1508310615396 L247 155.22962822313428 L248 152.4093851959248 L249 149.69532439011448 L250 147.0924512702252 L251 144.6055446498076 L252 142.2391474363767 L253 139.99755784574378 L254 137.88482110396382 L255 135.90472165412822 L256 134.0607758842084 L257 132.3562253910921 L258 130.79403079486082 L259 129.37686611623332 L260 128.1071137289448 L261 126.98685989765616 L262 126.01789091078221 L263 125.20168981640855 L264 124.53943376822347 L265 124.03199198713641 L266 123.67992434298415 L267 123.4834805594474 L268 123.44260004401194 L269 123.556912343518 L270 123.82573822454549 L271 124.2480913765913 L272 124.82268073470237 L273 125.547913416946 L274 126.42189827082193 L275 127.442450021458 L276 128.6070940131802 L277 129.91307153481614 L278 131.3573457178767 L279 132.93660799556898 L280 134.647285109427 L281 136.4855466492074 L282 138.4473131105844 L283 140.52826445410255 L284 142.72384914779943 L285 145.02929367490202 L286 147.43961248703178 L287 149.94961838242412 L288 152.55393328777959 L289 155.24699942152427 L290 158.0230908154595 L291 160.8763251710329 L292 163.80067602576537 L293 166.78998520471947 L294 169.83797553130228 L295 172.93826377115136 L296 176.0843737823688 L297 179.2697498449369 L298 182.48777014177514 L299 185.73176036358237 L300 188.99500740935278 L301 192.27077315425134 L302 195.55230825639984 L303 198.83286597404225 L304 202.10571596454025 L305 205.36415803668828 L306 208.6015358279412 L307 211.81125037830233 L308 214.9867735728444 L309 218.1216614251102 L310 221.20956717397837 L311 224.24425416697264 L312 227.21960850344453 L313 230.12965141156684 L314 232.96855133363437 L315 235.7306356947869 L316 238.4104023309347 L317 241.00253055238542 L318 243.50189182044048 L319 245.9035600150432 L320 248.20282127242294 L321 250.39518337258593 L322 252.47638465745152 L323 254.44240246142027 L324 256.2894610371886 L325 258.01403896068587 L326 259.6128760001081 L327 261.08297943514833 L328 262.42162981368335 L329 263.6263861343587 L330 264.6950904447211 L331 265.62587184577956 L332 266.41714989512224 L333 267.06763740198136 L334 267.57634260891814 L335 267.94257075608743 L336 268.16592502533985 L337 268.2463068627218 L338 268.1839156792395 L339 267.9792479310581 L340 267.6330955816103 L341 267.14654394938356 L342 266.52096894644706 L343 265.7580337140529 L344 264.85968466291246 L345 263.82814692699407 L346 262.66591924091665 L347 261.3757682522198 L348 259.9607222809724 L349 258.42406454033693 L350 256.76932583283184 L351 255.00027673812835 L352 253.12091930927832 L353 251.1354782952937 L354 249.04839190898122 L355 246.86430215988514 L356 244.58804477308897 L357 242.22463871548743 L358 239.77927535195107 L359 237.25730725457032 L360 234.66423668887984 L361 232.00570380162742 L362 229.287474535263 L363 226.51542829488105 L364 223.69554539385103 L365 220.83389430481833 L366 217.9366187431485 L367 215.00992461021596 L368 212.0600668242191 L369 209.09333606641138 L370 206.11604547079918 L371 203.13451728544985 L372 200.15506953359161 L373 197.18400270266295 L374 194.22758648938537 L375 191.29204662879056 L376 188.38355183493226 L377 185.50820088074994 L378 182.67200984423425 L379 179.88089954766812 L380 177.14068321627963 L381 174.45705438216228 L382 171.83557505876607 L383 169.2816642106718 L384 166.80058654270886 L385 164.3974416317788 L386 162.077153423997 L387 159.84446011896802 L388 157.7039044621693 L389 155.65982446552937 L390 153.7163445753597 L391 151.87736730583077 L392 150.14656535517503 L393 148.5273742207575 L394 147.02298532808038 L395 145.63633968767755 L396 144.37012209272135 L397 143.2267558690001 L398 142.2083981877381 L399 141.3169359505231 " stroke = "blue" stroke-width = "4" fill = "none" /></svg>