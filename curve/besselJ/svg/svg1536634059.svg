<svg width="400" height="400" viewbox = "0 0 400 400"  xmlns="http://www.w3.org/2000/svg">

<!--
<topfunctions>






function YofX(){
//foobar foobar
    X = plotparams.g*(x - plotparams.x0) - funcparams.X0;

    Y = BesselJ0(X);

    y = plotparams.y0 - plotparams.G*(Y - funcparams.Y0);
}



function plotfunction(){
    
    /*plot one function:*/
    currentStroke = "blue";
    currentLineWidth = 4;
    ctx.strokeStyle = currentStroke;
    ctx.lineWidth = currentLineWidth;
    ctx.beginPath();	
    x = 0;
    intx = x;
    YofX();
    currentSVG += "	<path d = \"M";
    currentSVG += Math.round(x).toString() + " ";
    currentSVG += Math.round(y).toString() + " ";
    for(x = 1;x < plotparams.plotwidth;x++){
        ctx.moveTo(x-1,y);
        YofX();
        ctx.lineTo(x,y);
        currentSVG += "L" + x + " " + y + " ";
    }
    ctx.stroke();
    currentSVG += "\""+ " stroke = \"" + currentStroke + "\" stroke-width = \"" + currentLineWidth.toString() + "\" fill = \"" + "none" + "\" "+"/>";
    /*finish plot one function*/
    
}

// http://www.mhtl.uwaterloo.ca/old/courses/me3532/js/bessel.html


function BesselJ(n,x){
	if (n == null || n.length == 0) return "n not specified";
	if (Math.floor(n) != n) return "Error: n not integer";
	if (n < 2) return "Error: n < 2";
	var ACC = 40.0;		// Make larger to increase accuracy.
	var BIGNO = 1.0e10;
	var BIGNI = 1.0e-10;
	var j,jsum,m,ax,bj,bjm,bjp,sum,tox,ans;
	ax=Math.abs(x);
	if (ax == 0.0) return 0.0;
	else if (ax > n) {
		tox = 2.0/ax;
		bjm=BesselJ0(ax);
		bj=BesselJ1(ax);
		for (j=1;j<n;j++) {
			bjp=j*tox*bj-bjm;
			bjm=bj;
			bj=bjp;
		}
		ans=bj;
	} else {
		tox=2.0/ax;
		if (Math.sqrt(ACC*n) >= 0)
			m=2*((n + Math.floor(Math.sqrt(ACC*n))) / 2);
		else
			m=2*((n + Math.ceil(Math.sqrt(ACC*n))) / 2);
		jsum=0;
		bjp=ans=sum=0.0;
		bj=1.0;
		for (j=m;j>0;j--) {
			bjm=j*tox*bj-bjp;
			bjp=bj;
			bj=bjm;
			if (Math.abs(bj) > BIGNO) {
				bj *= BIGNI;
				bjp *= BIGNI;
				ans *= BIGNI;
				sum *= BIGNI;
			}
			if (jsum) sum += bj;
			jsum=!jsum;
			if (j == n) ans=bjp;
		}
		sum=2.0*sum-bj;
		ans /= sum;
	}
	return x < 0.0 && (n & 1) ? -ans : ans;
}


function BesselJ0(x) {
	var ax,z,xx,y,ans,ans1,ans2;
	ax = Math.abs(x)
	if (ax < 8.0) {
		y = x * x;
		ans1 = 57568490574.0 + y * (-13362590354.0 + y * (651619640.7 + y * (-11214424.18 + y * (77392.33017 + y * (-184.9052456)))));
		ans2 = 57568490411.0 + y * (1029532985.0 + y * (9494680.718 + y * (59272.64853 + y * (267.8532712 + y * 1.0))));
		ans = ans1 / ans2;
	} else {
		z = 8.0 / ax;
		y = z * z;
		xx = ax - 0.785398164;
		ans1 = 1.0 + y * (-0.1098628627e-2 + y * (0.2734510407e-4 + y * (-0.2073370639e-5 + y * 0.2093887211e-6)));
		ans2 = -0.1562499995e-1 + y * (0.1430488765e-3 + y * (-0.6911147651e-5 + y * (0.7621095161e-6 - y * 0.934935152e-7)));
		ans = Math.sqrt(0.636619772 / ax) * (Math.cos(xx) * ans1 - z * Math.sin(xx) * ans2);
	}
	return ans;
}

function BesselJ1(x) {
	var ax,z,xx,y,ans,ans1,ans2;
	ax = Math.abs(x);
	if (ax < 8.0) {
		y=x*x;
		ans1 = x*(72362614232.0+y*(-7895059235.0+y*(242396853.1+y*(-2972611.439+y*(15704.48260+y*(-30.16036606))))));
		ans2 = 144725228442.0+y*(2300535178.0+y*(18583304.74+y*(99447.43394+y*(376.9991397+y*1.0))));
		ans = ans1/ans2;
	} else {
		z=8.0/ax;
		y=z*z;
		xx=ax-2.356194491;
		ans1=1.0+y*(0.183105e-2+y*(-0.3516396496e-4+y*(0.2457520174e-5+y*(-0.240337019e-6))));
		ans2=0.04687499995+y*(-0.2002690873e-3+y*(0.8449199096e-5+y*(-0.88228987e-6+y*0.105787412e-6)));
		ans=Math.sqrt(0.636619772/ax)*(Math.cos(xx)*ans1-z*Math.sin(xx)*ans2);
		if (x < 0.0) ans = -ans;
	}
	return ans;	
}
























</topfunctions>
-->

<!--
<imgurl>

</imgurl>
-->

<!--
<currentjson>
{
    "constants": {},
    "imgurl": "",
    "plotparams": {
        "G": 156.24722518287507,
        "g": 0.06830134553650706,
        "duration": 450.78888054094654,
        "plotwidth": 400,
        "plotheight": 400,
        "x0": 0,
        "y0": 200.00000000000003
    },
    "funcparams": {
        "phi": 0.2688139066614501,
        "T": 1.4465183912692552,
        "X0": 0,
        "Y0": 0
    }
}
</currentjson>
-->

<!--
<equation>

<h2>Bessel Function</h2>
<p style="color:blue">

</p><p class="bigeq">
$$
Y = J_n(X)
$$
</p>
<p></p>

$$
X = g(x - x_0) - X_0
$$
$$
Y = f(X)
$$
    
$$
y = y_0 - G(Y - Y_0)
$$


<p>
    X and Y, and $X_0$ and $Y_0$ in physical units of the System. x and y and x0 and y0 in pixels.  G is in pixels per Y unit and g is in X units per pixel. 
</p>






</equation>
-->
	<path d = "M0 44 L1 43.93494746897872 L2 44.48082959028696 L3 45.388511730387194 L4 46.65482045239247 L5 48.27533022079558 L6 50.24438059298379 L7 52.55509820212927 L8 55.19942344178625 L9 58.168141743370086 L10 61.45091931899444 L11 65.03634322397681 L12 68.9119655757707 L13 73.06435174921339 L14 77.4791323518651 L15 82.14105876792479 L16 87.03406204480272 L17 92.14131488297275 L18 97.44529647726996 L19 102.92785994639905 L20 108.57030207711551 L21 114.35343510038723 L22 120.25766020886456 L23 126.2630425182272 L24 132.34938716945268 L25 138.49631626479402 L26 144.68334632727507 L27 150.88996597182543 L28 157.0957134757867 L29 163.2802539374288 L30 169.42345571331526 L31 175.5054658288377 L32 181.50678406098612 L33 187.40833539841327 L34 193.19154059105992 L35 198.83838451000113 L36 204.33148204771953 L37 209.65414129965836 L38 214.79042377962244 L39 219.7252014343149 L40 224.44421023597465 L41 228.93410014665443 L42 233.18248126308524 L43 237.1779659672469 L44 240.91020692463908 L45 244.3699307897416 L46 247.54896749620568 L47 250.4402750278371 L48 253.03795958535162 L49 255.33729108311329 L50 257.3347139295302 L51 259.02785306439574 L52 260.4155152461418 L53 261.4976856016349 L54 262.27551947070504 L55 262.75132959698135 L56 262.9285687357179 L57 262.8118077680679 L58 262.4067094296099 L59 261.7199977787716 L60 260.7594235480755 L61 259.5337255377483 L62 258.0525882271478 L63 256.32659579458664 L64 254.36718275041807 L65 252.1865814016244 L66 249.7977663785789 L67 247.21439646606422 L68 244.45075399099485 L69 241.52168202856268 L70 238.44251969665845 L71 235.22903581540288 L72 231.89736121440268 L73 228.46391997492722 L74 224.94535989754752 L75 221.35848248789276 L76 217.7201727540459 L77 214.04732910872713 L78 210.35679366779544 L79 206.66528323375698 L80 202.9893212489147 L81 199.34517099753668 L82 195.74877033001343 L83 192.21566817441104 L84 188.76096309217527 L85 185.39924412502683 L86 182.1445341693451 L87 179.01023610263945 L88 176.00908187408453 L89 173.15308475761353 L90 170.453494951786 L91 167.92075869562785 L92 165.5644810539591 L93 163.393392509434 L94 161.4153194817157 L95 159.63715887693013 L96 158.0648567529143 L97 156.7033911678273 L98 155.5567592615389 L99 154.6279686009163 L100 153.919032801779 L101 153.43097142196603 L102 153.16381410175012 L103 153.11660890979826 L104 153.28743483513372 L105 153.67341834813973 L106 154.27075393667505 L107 155.07472850690615 L108 156.0797495225562 L109 157.27937674105135 L110 158.66635739051816 L111 160.23266461785624 L112 161.96953902523646 L113 163.86753310039558 L114 165.9165583350859 L115 168.1059348160452 L116 170.42444306388734 L117 172.86037788747504 L118 175.40160183991685 L119 178.03560596425052 L120 180.7495656811867 L121 183.53040046517117 L122 186.3648338673422 L123 189.239453934889 L124 192.14077381883396 L125 195.05529230504143 L126 197.969554004889 L127 200.87020894481503 L128 203.7440712978594 L129 206.57817700531464 L130 209.35984004269125 L131 212.07670709132466 L132 214.71681038509314 L133 217.268618510829 L134 219.72108495104303 L135 222.06369416850865 L136 224.28650504400187 L137 226.38019149102198 L138 228.33608008456685 L139 230.1461845549368 L140 231.80323701204208 L141 233.30071578071107 L142 234.63286974298558 L143 235.79473909926207 L144 236.78217247633472 L145 237.59184032683734 L146 238.22124458119606 L147 238.66872452991984 L148 238.9334589307972 L149 239.01546435225853 L150 238.91558978073738 L151 238.63550753623943 L152 238.17770055644127 L153 237.5454461254178 L154 236.7427961384701 L155 235.77455400942833 L156 234.64624834117487 L157 233.36410349390405 L158 231.93500719875726 L159 230.36647537687927 L160 228.66661433559247 L161 226.84408052422197 L162 224.90803804208662 L163 222.8681141002598 L164 220.73435264685355 L165 218.51716637277025 L166 216.22728732105838 L167 213.8757163281849 L168 211.4736715296782 L169 209.03253616568125 L170 206.56380592398642 L171 204.07903605908137 L172 201.58978852563507 L173 199.10757936368654 L174 196.64382657058022 L175 194.20979869143915 L176 191.81656435568806 L177 189.47494298186794 L178 187.19545686674107 L179 184.98828486750241 L180 182.8632178778335 L181 180.8296162895836 L182 178.89636962209983 L183 177.07185849068458 L184 175.3639190743957 L185 173.7798102314708 L186 172.32618339810512 L187 171.00905539321076 L188 169.83378423817936 L189 168.80504808663892 L190 167.9268273447912 L191 167.2023900482095 L192 166.63428054603622 L193 166.2243115284082 L194 165.97355941772838 L195 165.88236312916106 L196 165.95032619052358 L197 166.1763221966476 L198 166.55850355835682 L199 167.09431349151896 L200 167.78050117724524 L201 168.61314001029356 L202 169.5876488391412 L203 170.69881608809345 L204 171.94082663923766 L205 173.3072913400964 L206 174.7912789915286 L207 176.3853506598207 L208 178.0815961470508 L209 179.8716724447324 L210 181.74684398749588 L211 183.69802451617147 L212 185.71582035313813 L213 187.79057488721085 L214 189.91241406068863 L215 192.0712926474891 L216 194.2570411085624 L217 196.45941280902738 L218 198.668131380697 L219 200.87293801386843 L220 203.06363846343933 L221 205.2301495565603 L222 207.36254499214306 L223 209.4511002265843 L224 211.48633624502565 L225 213.4590620233187 L226 215.36041549257104 L227 217.18190282568918 L228 218.915435873656 L229 220.5533675883597 L230 222.08852527857184 L231 223.51424155611298 L232 224.82438284029766 L233 226.0133753003576 L234 227.07622812765624 L235 228.00855404206663 L236 228.80658694983248 L237 229.46719668350832 L238 229.98790076812026 L239 230.36687317143466 L240 230.6029500101155 L241 230.69563219751893 L242 230.64508503285856 L243 230.45213474541097 L244 230.1182620212555 L245 229.64559255369267 L246 229.03688467190221 L247 228.29551411552134 L248 227.42545603559088 L249 226.43126431467414 L250 225.31804831084227 L251 224.09144714159638 L252 222.75760163459952 L253 221.32312408228464 L254 219.79506594693575 L255 218.18088367167118 L256 216.48840276085258 L257 214.72578030076224 L258 212.90146609791182 L259 211.02416261803165 L260 209.1027839136242 L261 207.14641373192887 L262 205.16426299821538 L263 203.16562687150176 L264 201.15984157105933 L265 199.15624117242734 L266 197.164114571114 L267 195.19266281070733 L268 193.2509569697804 L269 191.34789679875047 L270 189.49217029376956 L271 187.6922143897998 L272 185.95617694928518 L273 184.29188021630753 L274 182.7067858988316 L275 181.2079620336462 L276 179.80205177992542 L277 178.49524427801813 L278 177.29324770015958 L279 176.20126460933838 L280 175.22396973159724 L281 174.36549023563845 L282 173.6293886018118 L283 173.0186481504267 L284 172.5356612869153 L285 172.18222050873402 L286 171.95951220608606 L287 171.86811327563663 L288 171.9079905534336 L289 172.07850306030073 L290 172.3784070400952 L291 172.8058637584759 L292 173.35845001727157 L293 174.0331713272245 L294 174.82647766987313 L295 175.73428176767584 L296 176.75197977022833 L297 177.8744742536274 L298 179.0961994197443 L299 180.4111483724282 L300 181.81290233851004 L301 183.29466169296424 L302 184.8492786397366 L303 186.4692913926084 L304 188.14695969405602 L305 189.8743015044254 L306 191.64313068887657 L307 193.44509552550215 L308 195.27171785479175 L309 197.11443268821333 L310 198.96462809213196 L311 200.81368516257388 L312 202.65301790648712 L313 204.47411284613509 L314 206.26856816508166 L315 208.0281322168813 L316 209.74474122104866 L317 211.41055597514384 L318 213.01799741684198 L319 214.55978087563454 L320 216.02894886031294 L321 217.41890223556896 L322 218.72342964888975 L323 219.9367350773778 L324 221.05346337315697 L325 222.0687236955876 L326 222.97811072855873 L327 223.77772359161338 L328 224.46418236453735 L329 225.03464215625604 L330 225.4868046603844 L331 225.81892715150715 L332 226.0298288881782 L333 226.118894900661 L334 226.08607715353455 L335 225.93189308540164 L336 225.65742154000597 L337 225.26429611503514 L338 224.75469596670268 L339 224.13133411981136 L340 223.39744334434852 L341 222.55675967070064 L342 221.61350362624992 L343 220.57235928638124 L344 219.43845124273628 L345 218.21731960086382 L346 216.9148931281828 L347 215.53746068136405 L348 214.09164104981173 L349 212.58435135884676 L350 211.02277418244188 L351 209.41432352089566 L352 207.7666098036413 L353 206.08740408144692 L354 204.38460157555252 L355 202.66618475380568 L356 200.9401861055771 L357 199.21465078816684 L358 197.4975993175422 L359 195.79699047558069 L360 194.12068460453588 L361 192.47640745720454 L362 190.87171476826444 L363 189.31395770848724 L364 187.8102493790346 L365 186.36743249783396 L366 184.99204842413195 L367 183.69030766077063 L368 182.46806196654714 L369 181.33077820324775 L370 180.28351403361833 L371 179.3308955776929 L372 178.4770971255883 L373 177.7258229951295 L374 177.0802916125466 L375 176.5432218840237 L376 176.1168219151345 L377 175.80278012421704 L378 175.60225878457368 L379 175.51589001908258 L380 175.54377425942744 L381 175.68548117074354 L382 175.9400530310945 L383 176.30601054388882 L384 176.78136105016637 L385 177.363609096688 L386 178.04976930499416 L387 178.83638147611003 L388 179.71952785541416 L389 180.69485247239794 L390 181.75758246067466 L391 182.90255125468178 L392 184.12422355111124 L393 185.41672191522375 L394 186.77385490490155 L395 188.1891465785936 L396 189.6558672472402 L397 191.16706532486108 L398 192.71560012776493 L399 194.29417546832235 " stroke = "blue" stroke-width = "4" fill = "none" /></svg>