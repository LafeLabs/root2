<svg width="400" height="400" viewbox = "0 0 400 400"  xmlns="http://www.w3.org/2000/svg">

<!--
<topfunctions>






function YofX(){
    X = plotparams.g*(x - plotparams.x0) - funcparams.X0;
    Y = Math.tanh(X);
    y = plotparams.y0 - plotparams.G*(Y - funcparams.Y0);
}


function YofX2(){
    X = plotparams.g*(x - plotparams.x0) - funcparams.X0;
    Y = funcparams.b*X*X + funcparams.c*X + funcparams.d;
    y = plotparams.y0 - plotparams.G*(Y - funcparams.Y0);
 }

function XYofT(){
    T = plotparams.g*t;
    X = Math.exp(-T/funcparams.tau)*Math.cos(2*Math.PI*T/funcparams.T);
    Y = Math.exp(-T/funcparams.tau)*Math.sin(2*Math.PI*T/funcparams.T);
    y = plotparams.y0 - plotparams.G*(Y - funcparams.Y0);
    x = plotparams.x0 - plotparams.G*(X - funcparams.X0);    
}


function plotfunction(){
/*

    currentStroke = "blue";
    currentLineWidth = 4;
    ctx.strokeStyle = currentStroke;
    ctx.lineWidth = currentLineWidth;
    ctx.beginPath();	
    x = 0;
    y = 0;
    t= 0;
    XYofT();
    currentSVG += "	<path d = \"M";
    currentSVG += Math.round(x).toString() + " ";
    currentSVG += Math.round(y).toString() + " ";
    for(t = 1;t < plotparams.duration;t++){
        ctx.moveTo(x,y);
        XYofT();
        ctx.lineTo(x,y);
        currentSVG += "L" + x + " " + y + " ";
    }
    ctx.stroke();
    currentSVG += "\""+ " stroke = \"" + currentStroke + "\" stroke-width = \"" + currentLineWidth.toString() + "\" fill = \"" + "none" + "\" "+"/>";


    /*plot one function:*/
    currentStroke = "blue";
    currentLineWidth = 4;
    ctx.strokeStyle = currentStroke;
    ctx.lineWidth = currentLineWidth;
    ctx.beginPath();	
    x = 0;
    YofX();
    currentSVG += "	<path d = \"M";
    currentSVG += Math.round(x).toString() + " ";
    currentSVG += Math.round(y).toString() + " ";
    for(x = 1;x < plotparams.plotwidth;x++){
        ctx.moveTo(x-1,y);
        YofX();
        ctx.lineTo(x,y);
        currentSVG += "L" + x + " " + y + " ";
    }
    ctx.stroke();
    currentSVG += "\""+ " stroke = \"" + currentStroke + "\" stroke-width = \"" + currentLineWidth.toString() + "\" fill = \"" + "none" + "\" "+"/>";
    /*finish plot one function*/
    

}




























</topfunctions>
-->

<!--
<imgurl>

</imgurl>
-->

<!--
<currentjson>
{
    "constants": {},
    "imgurl": "",
    "plotparams": {
        "G": 68.84418352571562,
        "g": 0.04240976183724846,
        "duration": 545.4545454545454,
        "plotwidth": 400,
        "plotheight": 400,
        "x0": 200,
        "y0": 200
    },
    "funcparams": {
        "a": 0.12727272727272726,
        "b": 0,
        "c": 0,
        "X0": 0,
        "Y0": 0
    }
}
</currentjson>
-->

<!--
<equation>




<h2>Hyperbolic Tangent</h2>
<p style="color:blue">

</p><p class="bigeq">
$$
Y = \tanh{X}$$
</p>
<p></p>

$$
X = g(x - x_0) - X_0
$$
$$
Y = f(X)
$$
    
$$
y = y_0 - G(Y - Y_0)
$$


<p>
    X and Y, and $X_0$ and $Y_0$ in physical units of the System. x and y and x0 and y0 in pixels.  G is in pixels per Y unit and g is in X units per pixel. 
</p>





</equation>
-->
	<path d = "M0 269 L1 268.8441770928621 L2 268.8441765234221 L3 268.8441759035749 L4 268.84417522885855 L5 268.8441744944158 L6 268.84417369495986 L7 268.84417282473555 L8 268.8441718774785 L9 268.8441708463697 L10 268.8441697239865 L11 268.8441685022494 L12 268.8441671723633 L13 268.844165724755 L14 268.8441641490036 L15 268.84416243376575 L16 268.84416056669403 L17 268.84415853434814 L18 268.8441563220978 L19 268.8441539140178 L20 268.8441512927733 L21 268.8441484394947 L22 268.84414533364236 L23 268.84414195285825 L24 268.8441382728053 L25 268.8441342669921 L26 268.8441299065822 L27 268.84412516018654 L28 268.84411999363743 L29 268.8441143697428 L30 268.8441082480182 L31 268.84410158439545 L32 268.8440943309056 L33 268.84408643533334 L34 268.84407784084135 L35 268.844068485561 L36 268.8440583021471 L37 268.8440472172931 L38 268.8440351512032 L39 268.84402201701823 L40 268.8440077201902 L41 268.8439921578018 L42 268.84397521782546 L43 268.8439567783171 L44 268.84393670653805 L45 268.8439148579998 L46 268.84389107542376 L47 268.84386518760925 L48 268.84383700820104 L49 268.84380633434785 L50 268.84377294524245 L51 268.84373660053194 L52 268.8436970385877 L53 268.8436539746225 L54 268.84360709863995 L55 268.84355607320373 L56 268.84350053100843 L57 268.8434400722358 L58 268.8433742616769 L59 268.84330262559956 L60 268.84322464833866 L61 268.8431397685845 L62 268.84304737534273 L63 268.8429468035371 L64 268.8428373292221 L65 268.84271816437337 L66 268.84258845121553 L67 268.84244725604947 L68 268.8422935625321 L69 268.84212626436295 L70 268.84194415732213 L71 268.84174593060493 L72 268.8415301573893 L73 268.84129528456856 L74 268.8410396215764 L75 268.8407613282228 L76 268.8404584014543 L77 268.8401286609427 L78 268.8397697333994 L79 268.83937903550304 L80 268.8389537553161 L81 268.8384908320596 L82 268.83798693409864 L83 268.837438434982 L84 268.8368413873638 L85 268.8361914946201 L86 268.8354840799569 L87 268.83471405278874 L88 268.8338758721469 L89 268.832963506855 L90 268.83197039218805 L91 268.83088938270384 L92 268.8297127009112 L93 268.82843188140714 L94 268.8270377100854 L95 268.8255201579825 L96 268.8238683092908 L97 268.82207028302514 L98 268.8201131477875 L99 268.81798282902395 L100 268.81566400811596 L101 268.8131400125921 L102 268.8103926966833 L103 268.8074023113783 L104 268.804147363064 L105 268.8006044597555 L106 268.7967481438373 L107 268.7925507101436 L108 268.78798200810644 L109 268.7830092265939 L110 268.7775966599425 L111 268.771705453565 L112 268.76529332737596 L113 268.75831427513646 L114 268.7507182376574 L115 268.74245074763644 L116 268.7334525437201 L117 268.7236591511884 L118 268.71300042645345 L119 268.70140006233845 L120 268.6887750508681 L121 268.67503510004934 L122 268.6600820008515 L123 268.6438089403132 L124 268.62609975640214 L125 268.60682812994025 L126 268.5858567085743 L127 268.5630361574319 L128 268.5382041307427 L129 268.51118415834 L130 268.481784440583 L131 268.44979654486303 L132 268.41499399647705 L133 268.3771307562842 L134 268.33593957720393 L135 268.29113023128093 L136 268.24238759874686 L137 268.1893696102592 L138 268.131705033315 L139 268.06899109374257 L140 268.00079092318697 L141 267.92663082365726 L142 267.8459973405332 L143 267.7583341359623 L144 267.6630386553828 L145 267.55945858101575 L146 267.44688806766175 L147 267.3245637580749 L148 267.19166057765824 L149 267.0472873113183 L150 266.89048196914496 L151 266.7202069522564 L152 266.53534403580204 L153 266.33468919288924 L154 266.11694729124457 L155 265.8807267038981 L156 265.6245338862579 L157 265.3467679847832 L158 265.04571555723726 L159 264.71954550133955 L160 264.36630430766684 L161 263.98391177393955 L162 263.5701573413926 L163 263.1226972396749 L164 262.6390526544731 L165 262.11660916144706 L166 261.55261770057075 L167 260.94419739581673 L168 260.2883405552447 L169 259.58192021458194 L170 258.8217006115462 L171 258.00435099629925 L172 257.1264631929253 L173 256.1845733246674 L174 255.17518809838987 L175 254.094816007607 L176 252.94000375447456 L177 251.70737810546427 L178 250.393693279393 L179 248.9958838171212 L180 247.51112269775155 L181 245.93688424640288 L182 244.27101112570148 L183 242.51178442194453 L184 240.6579955356999 L185 238.70901827738712 L186 236.66487926693566 L187 234.52632446236956 L188 232.29487941750318 L189 229.97290071803062 L190 227.5636159924129 L191 225.07114996128382 L192 222.5005341941519 L193 219.85769859525777 L194 217.1494431421084 L195 214.38338903941195 L196 211.56790920426462 L197 208.71203882961345 L198 205.82536763580492 L199 202.91791626063764 L200 200 L201 197.08208373936236 L202 194.17463236419508 L203 191.28796117038655 L204 188.43209079573538 L205 185.61661096058805 L206 182.8505568578916 L207 180.14230140474223 L208 177.4994658058481 L209 174.92885003871618 L210 172.4363840075871 L211 170.02709928196938 L212 167.70512058249682 L213 165.47367553763044 L214 163.33512073306434 L215 161.29098172261288 L216 159.3420044643001 L217 157.48821557805547 L218 155.72898887429852 L219 154.06311575359712 L220 152.48887730224845 L221 151.0041161828788 L222 149.606306720607 L223 148.29262189453573 L224 147.05999624552544 L225 145.905183992393 L226 144.82481190161013 L227 143.81542667533265 L228 142.87353680707466 L229 141.99564900370075 L230 141.1782993884538 L231 140.4180797854181 L232 139.7116594447553 L233 139.05580260418324 L234 138.44738229942922 L235 137.88339083855294 L236 137.36094734552688 L237 136.87730276032508 L238 136.42984265860738 L239 136.01608822606042 L240 135.63369569233316 L241 135.28045449866042 L242 134.95428444276277 L243 134.65323201521682 L244 134.3754661137421 L245 134.11927329610188 L246 133.88305270875543 L247 133.66531080711076 L248 133.46465596419796 L249 133.27979304774362 L250 133.10951803085504 L251 132.9527126886817 L252 132.80833942234176 L253 132.6754362419251 L254 132.55311193233825 L255 132.44054141898425 L256 132.33696134461718 L257 132.2416658640377 L258 132.1540026594668 L259 132.07336917634274 L260 131.99920907681306 L261 131.93100890625743 L262 131.86829496668503 L263 131.81063038974082 L264 131.75761240125314 L265 131.7088697687191 L266 131.66406042279607 L267 131.6228692437158 L268 131.58500600352298 L269 131.55020345513697 L270 131.518215559417 L271 131.48881584166003 L272 131.4617958692573 L273 131.4369638425681 L274 131.41414329142572 L275 131.39317187005975 L276 131.37390024359783 L277 131.35619105968684 L278 131.3399179991485 L279 131.32496489995066 L280 131.31122494913188 L281 131.29859993766155 L282 131.28699957354655 L283 131.27634084881163 L284 131.26654745627994 L285 131.25754925236356 L286 131.2492817623426 L287 131.24168572486354 L288 131.23470667262401 L289 131.22829454643502 L290 131.2224033400575 L291 131.2169907734061 L292 131.21201799189356 L293 131.20744928985638 L294 131.2032518561627 L295 131.19939554024452 L296 131.19585263693602 L297 131.19259768862167 L298 131.18960730331668 L299 131.1868599874079 L300 131.18433599188404 L301 131.18201717097605 L302 131.17988685221252 L303 131.17792971697486 L304 131.1761316907092 L305 131.1744798420175 L306 131.17296228991464 L307 131.17156811859286 L308 131.17028729908878 L309 131.16911061729616 L310 131.16802960781197 L311 131.167036493145 L312 131.1661241278531 L313 131.16528594721123 L314 131.1645159200431 L315 131.1638085053799 L316 131.1631586126362 L317 131.16256156501802 L318 131.16201306590136 L319 131.16150916794038 L320 131.1610462446839 L321 131.16062096449696 L322 131.1602302666006 L323 131.15987133905733 L324 131.15954159854567 L325 131.1592386717772 L326 131.15896037842361 L327 131.15870471543147 L328 131.1584698426107 L329 131.15825406939504 L330 131.15805584267787 L331 131.15787373563705 L332 131.15770643746788 L333 131.15755274395056 L334 131.15741154878444 L335 131.15728183562663 L336 131.1571626707779 L337 131.15705319646295 L338 131.15695262465727 L339 131.15686023141552 L340 131.15677535166134 L341 131.15669737440044 L342 131.1566257383231 L343 131.1565599277642 L344 131.15649946899157 L345 131.15644392679627 L346 131.15639290136005 L347 131.1563460253775 L348 131.15630296141228 L349 131.15626339946806 L350 131.15622705475755 L351 131.15619366565215 L352 131.15616299179896 L353 131.15613481239075 L354 131.15610892457624 L355 131.15608514200022 L356 131.15606329346195 L357 131.15604322168292 L358 131.1560247821745 L359 131.15600784219822 L360 131.15599227980982 L361 131.1559779829818 L362 131.15596484879683 L363 131.1559527827069 L364 131.15594169785288 L365 131.15593151443898 L366 131.15592215915865 L367 131.15591356466666 L368 131.15590566909444 L369 131.15589841560455 L370 131.1558917519818 L371 131.1558856302572 L372 131.15588000636257 L373 131.15587483981346 L374 131.15587009341778 L375 131.1558657330079 L376 131.1558617271947 L377 131.15585804714175 L378 131.15585466635764 L379 131.1558515605053 L380 131.15584870722674 L381 131.1558460859822 L382 131.15584367790223 L383 131.1558414656519 L384 131.15583943330597 L385 131.15583756623428 L386 131.15583585099643 L387 131.155834275245 L388 131.1558328276367 L389 131.15583149775063 L390 131.1558302760135 L391 131.15582915363032 L392 131.1558281225215 L393 131.15582717526445 L394 131.15582630504014 L395 131.15582550558418 L396 131.15582477114145 L397 131.15582409642508 L398 131.1558234765779 L399 131.15582290713792 " stroke = "blue" stroke-width = "4" fill = "none" /></svg>